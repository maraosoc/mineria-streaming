[project]
name = "streaming"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.12"
dependencies = [
    "rich>=14.2.0",
    "textual>=6.3.0",
]

[dependency-groups]
dev = [
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "ruff>=0.14.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
# This line tells Hatchling to include the entire 'src' directory
# and all its contents (both .py and non-.py files) in the wheel.
include = ["/src"]

[project.scripts]
streamingapp = "src.main:_cli"

[tool.pytest.ini_options]
pythonpath = "src"

[tool.ruff]
extend-exclude = ["tests/data"]
line-length = 88
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# Enable flake8-bugbear
select = ["E4", "E7", "E9", "F", "B", "I"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]

# Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.mypy]
disallow_untyped_defs = true
disallow_incomplete_defs = true
mypy_path = "src"

[[tool.mypy.overrides]]
module = "boto3.*"
ignore_missing_imports = true